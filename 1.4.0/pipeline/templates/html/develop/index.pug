extends  ../resources/pug/layout

append meta
    <!-- No more cache -->
    meta( http-equiv="cache-control" content="no-cache, must-revalidate, post-check=0, pre-check=0" )
    meta( http-equiv="cache-control" content="max-age=0" )
    meta( http-equiv="expires" content="0" )
    meta( http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" )
    meta( http-equiv="pragma" content="no-cache" )

block scripts
    if resources.scripts
        for resource in resources.scripts
            script( src=resource.src defer type = resource.isEs6Module ? 'module' : 'text/javascript' )

    script( src="https://spectorcdn.babylonjs.com/spector.bundle.js" )
    script( src="https://browser.sentry-cdn.com/5.20.1/bundle.min.js", integrity="sha384-O8HdAJg1h8RARFowXd2J/r5fIWuinSBtjhwQoPesfVILeXzGpJxvyY/77OaPPXUo", crossorigin="anonymous" )

block config
    script.
        var $environment = {
            baseUrl: "./",
            resourceConfig: {
                json: "external",
                image: "external",
                video: "external",
                blob: "external",
                sound: "external"
            },
            packageConfig: {
                email: !{ JSON.stringify( sentry.email ) },
                signature: !{ JSON.stringify( sentry.signature ) },
                version: !{ JSON.stringify( package.version ) }
            }
        };

block preloader

prepend content
    script.
        if ( window.SPECTOR && document.location.search.indexOf( 'spector' ) >= 0 ) {
            var spector = new SPECTOR.Spector();
            spector.spyCanvases();
            spector.displayUI();
        };

        window.addEventListener( "luna:start", function() {
            // https://github.com/mrdoob/stats.js/
            if ( document.location.search.indexOf( 'fps' ) >= 0 ) {
                const script = document.createElement( 'script' );
                script.onload = function() {
                    const stats = new Stats();
                    document.body.appendChild( stats.dom );
                    window.app.app.events.on( 'postrender', function loop() {
                        stats.update();
                    }, this );
                };

                script.src = '//mrdoob.github.io/stats.js/build/stats.min.js';
                document.head.appendChild( script );
            }
        } );

        window.addEventListener( "luna:build", function () {
            if ( typeof( Sentry ) !== 'undefined' ) {
                Sentry.init( {
                    dsn: 'https://0f82c4298eeb48ab86f308cdd2e6ff43@o435176.ingest.sentry.io/5393224',
                    environment: "release",
                    beforeSend( event, hint ) {
                        return sentryBeforeSend( event, hint );
                    },
                } );

                Sentry.configureScope( function ( scope ) {
                    scope.setUser( {
                        "id": $environment.packageConfig.email,
                        "email": $environment.packageConfig.email
                    } );
                    scope.setTag( "build_signature", $environment.packageConfig.signature );
                    scope.setTag( "playable_version", $environment.packageConfig.version );
                } );
            } else {
                console.warn( 'Unable to initialise Sentry, it was not defined' );
            }
        } );

